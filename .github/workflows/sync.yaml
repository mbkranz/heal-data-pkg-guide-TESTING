name: sync-healdata-utils
env:
  # input_<var> where you are syncing from (e.g., healdata-utils)
  # output_<var> where you are syncing to (ie in this repo)
  input_fork: norc-heal
  input_branch: pr-integration
  output_branch: $GITHUB_REF_NAME
  input_csv_docspath: docs/vlmd/schemas/csv-fields.md
  input_json_docspath: docs/vlmd/schemas/json-data-dictionary.md
  output_csv_docspath: docs/schemas/csv-fields.md
  output_json_docspath: docs/schemas/json-data-dictionary.md
  commit_message: 'Automated update of rendered vlmd schemas in markdown'
  
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  # push:
  #   branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  sync:
    name: Sync VLMD schemas
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master branch
        uses: actions/checkout@v3
      - name: Install Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip' 
      - name: Install dependencies
        run: pip install requests
      - name: Sync VLMD schemas
        run: |
          python scripts/sync_schemas.py --fork ${input_fork} --branch ${input_branch} \
          --input-csv-docspath ${input_csv_docspath} --input-json-docspath ${input_json_docspath} \
          --output-csv-docspath ${output_csv_docspath} --output-json-docspath ${output_json_docspath}
      - name: Commit new files
        run: |
          git config user.name ${{ github.triggering_actor }}
          git config user.email ${{ github.triggering_actor }}@users.noreply.github.com
          git add .
          git commit -m ${commit_message}
          git push -u origin 
      - name: create pull request
        run: |
          
          gh pr create -B ${output_branch} -H main --title ${commit_message} --body 'Created by Github action'
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}